// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.exc.exchangecurrency.domain.exc;

import com.exc.exchangecurrency.domain.exc.ExchangeCurrency;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ExchangeCurrency_Roo_Jpa_ActiveRecord {
    
    public static final List<String> ExchangeCurrency.fieldNames4OrderClauseFilter = java.util.Arrays.asList("exchange_Rates", "Bank", "DateExchangeCuurency", "Currency");
    
    public static long ExchangeCurrency.countExchangeCurrencys() {
        return entityManager().createQuery("SELECT COUNT(o) FROM ExchangeCurrency o", Long.class).getSingleResult();
    }
    
    public static List<ExchangeCurrency> ExchangeCurrency.findAllExchangeCurrencys() {
        return entityManager().createQuery("SELECT o FROM ExchangeCurrency o", ExchangeCurrency.class).getResultList();
    }
    
    public static List<ExchangeCurrency> ExchangeCurrency.findAllExchangeCurrencys(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM ExchangeCurrency o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, ExchangeCurrency.class).getResultList();
    }
    
    public static ExchangeCurrency ExchangeCurrency.findExchangeCurrency(Long id) {
        if (id == null) return null;
        return entityManager().find(ExchangeCurrency.class, id);
    }
    
    public static List<ExchangeCurrency> ExchangeCurrency.findExchangeCurrencyEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM ExchangeCurrency o", ExchangeCurrency.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<ExchangeCurrency> ExchangeCurrency.findExchangeCurrencyEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM ExchangeCurrency o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, ExchangeCurrency.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public ExchangeCurrency ExchangeCurrency.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        ExchangeCurrency merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
